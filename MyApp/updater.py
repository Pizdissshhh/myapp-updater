import os, json, zipfile, shutil, requests, subprocess, sys

# === –ù–ê–°–¢–†–û–ô–ö–ò ===
USER = "Pizdissshhh"       # ‚Üê –í–≤–µ–¥–∏ —Å—é–¥–∞ —Å–≤–æ–π GitHub –ª–æ–≥–∏–Ω
REPO = "myapp-updater"      # ‚Üê –ò–º—è —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è
BRANCH = "main"

BASE_URL = f"https://raw.githubusercontent.com/{USER}/{REPO}/{BRANCH}"
VERSION_URL = f"{BASE_URL}/version.json"
ARCHIVE_URL = f"{BASE_URL}/app.zip"

LOCAL_DIR = "app"
LOCAL_VERSION_FILE = os.path.join(LOCAL_DIR, "version.json")

def get_local_version():
    try:
        with open(LOCAL_VERSION_FILE) as f:
            return json.load(f)["version"]
    except:
        return "0.0.0"

def get_remote_version():
    r = requests.get(VERSION_URL, timeout=10)
    r.raise_for_status()
    return json.loads(r.text)["version"]

def download_and_extract():
    print("üîÑ –°–∫–∞—á–∏–≤–∞—é –Ω–æ–≤—É—é –≤–µ—Ä—Å–∏—é...")
    r = requests.get(ARCHIVE_URL, timeout=60)
    r.raise_for_status()
    with open("update.zip", "wb") as f:
        f.write(r.content)

    with zipfile.ZipFile("update.zip", "r") as zf:
        if os.path.exists("app_new"):
            shutil.rmtree("app_new")
        zf.extractall("app_new")

    # –ó–∞–º–µ–Ω—è–µ–º —Å—Ç–∞—Ä—É—é –≤–µ—Ä—Å–∏—é
    if os.path.exists(LOCAL_DIR):
        shutil.rmtree(LOCAL_DIR)
    shutil.move("app_new", LOCAL_DIR)
    os.remove("update.zip")
    print("‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ.")

def run_app():
    exe = os.path.join(LOCAL_DIR, "main.exe")
    py = os.path.join(LOCAL_DIR, "main.py")

    print("üöÄ –ó–∞–ø—É—Å–∫ –ø—Ä–æ–≥—Ä–∞–º–º—ã...")
    if os.path.exists(exe):
        subprocess.Popen([exe])
    elif os.path.exists(py):
        subprocess.Popen(["python", py])
    else:
        print("‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω main.exe –∏–ª–∏ main.py")

if __name__ == "__main__":
    print("=== –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è ===")
    local = get_local_version()
    try:
        remote = get_remote_version()
    except Exception as e:
        print("‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –≤–µ—Ä—Å–∏–∏:", e)
        run_app()
        sys.exit(0)

    print(f"–õ–æ–∫–∞–ª—å–Ω–∞—è –≤–µ—Ä—Å–∏—è: {local}")
    print(f"–£–¥–∞–ª—ë–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è: {remote}")

    if remote > local:
        download_and_extract()
    else:
        print("‚úÖ –ê–∫—Ç—É–∞–ª—å–Ω–∞—è –≤–µ—Ä—Å–∏—è.")

    run_app()
